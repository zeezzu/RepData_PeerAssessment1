baseData <- read.csv("activity.csv")
head(baseData)
dim(baseData)
summary(baseData)
source('~/.active-rstudio-document')
install.packages("ggplot2", "reshape2", "plyr", "languageR",
"lme4", "psych")
install.packages("ggplot2", "reshape2", "plyr", "languageR",
"lme4", "psych")
getwd()
getwd()
setwd("Users/Lawrence/Documents/RStudio")
setwd('Users/Lawrence/Documents/RStudio')
setwd('Users/Lawrence/Documents/RStudio')
install.packages("ggplot2")
source('~/Documents/GitHub/RepData_PeerAssessment1/Untitled.R')
ggplot(SummedDataByDay, aes(x = totalsteps)) +
geom_histogram(fill = "steelblue", binwidth=1000) +
labs(title = "Total Daily Steps", x = "Steps", y = "Frequency")
library(ggplot2)
ggplot(SummedDataByDay, aes(x = totalsteps)) +
geom_histogram(fill = "steelblue", binwidth=1000) +
labs(title = "Total Daily Steps", x = "Steps", y = "Frequency")
# Read base data into a data frame.
baseData <- read.csv("activity.csv")
# change date type to date class
baseData$date <- as.Date(as.character(baseData$date))
# create NA logical vector
baseDataNA <- is.na(baseData$steps)
# create clean base for later mean calculations
cleanBase <- baseData[!baseDataNA,]
# aggregate clean non NA steps per day (SUM)
SummedDataByDay <- aggregate(baseData$steps, by=list(baseData$date), sum)
# adjust column names
names(SummedDataByDay)[1] ="date"
names(SummedDataByDay)[2] ="totalsteps"
# top 15 of Summed Steps by day
head(SummedDataByDay,15)
# Plot using ggplot
ggplot(SummedDataByDay, aes(x = totalsteps)) +
geom_histogram(fill = "steelblue", binwidth=1000) +
labs(title = "Total Daily Steps", x = "Steps", y = "Frequency")
# Mean of steps taken per day
mean(SummedDataByDay$totalsteps,na.rm=TRUE)
#median of steps taken per day
median(SummedDataByDay$totalsteps,na.rm=TRUE)
nonNASubset <- baseData[!baseDataNA,]
MeanDataByInterval <- aggregate(nonNASubset$steps, by=list(nonNASubset$interval), mean)
# set the column names
names(MeanDataByInterval)[1] ="interval"
names(MeanDataByInterval)[2] ="steps"
ggplot(MeanDataByInterval, aes(x = interval, y=steps)) +
labs(title = "Sum of Steps by Interval", x = "interval", y = "steps")+
geom_line(color="red")
maxInterval <- MeanDataByInterval[which.max(MeanDataByInterval$steps),]
# generate listing of NA's
missingVals <- sum(baseDataNA)
missingVals
# new dataset
baseData2 <- baseData
# NA's in dataset
# dataset minus NA's for Mean calculation
NABase2 <- baseData2[is.na(baseData2$steps),]
cleanBase2 <- baseData2[!is.na(baseData2$steps),]
# generate Mean Data2 by interval
MeanData2ByInterval <- aggregate(cleanBase2$steps, by=list(cleanBase2$interval), sum)
names(MeanData2ByInterval)[1] ="interval"
names(MeanData2ByInterval)[2] ="steps"
# IMPUT METHOD- ATTEMPT 2
baseData2 <- baseData
missingData <- is.na(baseData2$steps)
meanVals <- tapply(cleanBase$steps, cleanBase$interval, mean, na.rm=TRUE, simplify=TRUE)
baseData2$steps[missingData] <- meanVals[as.character(baseData2$interval[missingData])]
#IMPUTE METHOD ATTEMPT 1.
# after trying the following code and messing with it for a few hours, and couldn't quite
# get it right, i abandoned it for another path.  I expect the assignment was slightly off.
# intervals to match
#myCount <- 0
# loop through baseData2
#for (i in 1:nrow(baseData2)){
#  # if steps in current row is null act.
#  if (is.na(baseData2$steps[i])){
#    # match interval
#    for (j in 1:length(MeanData2ByInterval$interval)){
#      if (baseData2$interval[i]== MeanData2ByInterval$interval[j]){
#        baseData2$steps[i] <- as.integer(MeanData2ByInterval$steps[j])
#        myCount <- myCount + 1
#      }
#    }
#  }
#}
# values modified.
#myCount
# original missing data count
sum(missingData)
# count of NA values
sum(is.na(baseData2$steps))
FullSummedDataByDay <- aggregate(baseData2$steps, by=list(baseData2$date), sum)
names(FullSummedDataByDay)[1] ="date"
names(FullSummedDataByDay)[2] ="totalsteps"
head(FullSummedDataByDay,15)
# Plot using ggplot
ggplot(FullSummedDataByDay, aes(x = totalsteps)) +
geom_histogram(fill = "steelblue", binwidth=1000) +
labs(title = "Total Daily Steps", x = "Steps", y = "Frequency")
# Mean on New Data
mean(FullSummedDataByDay$totalsteps)
# Median on New Data
median(FullSummedDataByDay$totalsteps)
baseData2$weekday <- weekdays(baseData2$date)
baseData2$weekend <- ifelse (baseData2$weekday == "Saturday" | baseData2$weekday == "Sunday", "Weekend", "Weekday")
#baseData2$weekend <- as.factor(baseData2$weekend)
head(baseData2,5)
MeanDataWeekendWeekday <- aggregate(baseData2$steps, by=list(baseData2$weekend, baseData2$interval), mean)
names(MeanDataWeekendWeekday)[1] ="weekend"
names(MeanDataWeekendWeekday)[2] ="interval"
names(MeanDataWeekendWeekday)[3] ="steps"
ggplot(MeanDataWeekendWeekday, aes(x = interval, y=steps, color=weekend)) +
geom_line() +
facet_grid(weekend ~ .) +
labs(title = "Mean of Steps by Interval", x = "interval", y = "steps")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
## What is the average daily activity pattern?
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
averages[which.max(averages$steps),]
## Imputing missing values
missing <- is.na(data$steps)
# How many missing
table(missing)
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
## Are there differences in activity patterns between weekdays and weekends?
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
## What is the average daily activity pattern?
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
averages[which.max(averages$steps),]
## Imputing missing values
missing <- is.na(data$steps)
# How many missing
table(missing)
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
## Are there differences in activity patterns between weekdays and weekends?
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
## What is the average daily activity pattern?
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
averages[which.max(averages$steps),]
## Imputing missing values
missing <- is.na(data$steps)
# How many missing
table(missing)
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
## Are there differences in activity patterns between weekdays and weekends?
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
```{r}
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
## What is the average daily activity pattern?
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
averages[which.max(averages$steps),]
## Imputing missing values
missing <- is.na(data$steps)
# How many missing
table(missing)
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
## Are there differences in activity patterns between weekdays and weekends?
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
```{r}
```
unzip(zipfile="activity.zip")
## ----loaddata------------------------------------------------------------
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
## ------------------------------------------------------------------------
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
## ------------------------------------------------------------------------
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
## ------------------------------------------------------------------------
averages[which.max(averages$steps),]
## ----how_many_missing----------------------------------------------------
missing <- is.na(data$steps)
# How many missing
table(missing)
## ------------------------------------------------------------------------
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
## ------------------------------------------------------------------------
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
## ------------------------------------------------------------------------
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
## ------------------------------------------------------------------------
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
